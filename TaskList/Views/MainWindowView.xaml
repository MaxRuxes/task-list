<Window x:Class="TaskList.Views.MainWindowView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewModels="clr-namespace:TaskList.ViewModels"
        xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
        xmlns:models="clr-namespace:TaskList.ViewModels.Models"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
        Title="Список дел" Height="600" Width="925"
        MinWidth="1280" MinHeight="590"
        Icon="../ToolKit/icon_toolbar.png"
        d:DataContext="{d:DesignInstance d:Type={x:Type viewModels:MainWindowViewModel}}">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="GlobalResource.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <DataTemplate x:Key="StartExecute">
                <Button Command="{Binding StartExecuteCommand}" Content="Начать выполнение"
                        IsEnabled="{Binding IsEditNow, UpdateSourceTrigger=PropertyChanged}"/>
            </DataTemplate>

            <DataTemplate x:Key="EndExecute" >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition  Width="1*"/>
                        <ColumnDefinition Width="2*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Column="0" Text="Дата начала: " />
                    <TextBlock  Grid.Column="1" Margin="3,0,3,5" Height="25"
                                Text="{Binding EditTodoModel.StartDate, UpdateSourceTrigger=PropertyChanged, StringFormat=d}"
                                IsEnabled="False"/>
                    <Button Command="{Binding EndExecuteCommand}"
                            IsEnabled="{Binding IsEditNow,UpdateSourceTrigger=PropertyChanged}"
                            Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1"
                            Content="Закончить выполнение"/>
                </Grid>
            </DataTemplate>

            <DataTemplate x:Key="DoneExecute" >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition  Width="*"/>
                        <ColumnDefinition Width="2*"/>
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0" Grid.Column="0"
                               Text="Дата начала: " />
                    <TextBlock  Grid.Column="1" Grid.Row="0"
                                 Margin="3,0,3,5"
                                 IsEnabled="False"
                                 Text="{Binding EditTodoModel.StartDate, UpdateSourceTrigger=PropertyChanged, StringFormat=d}" />

                    <TextBlock Grid.Row="1" Grid.Column="0"
                               Text="Дата окончания: " />
                    <TextBlock  Grid.Column="1" Grid.Row="1"
                                 Margin="3,0,3,5"
                                 IsEnabled="False"
                                 Text="{Binding EditTodoModel.EndRealDate, UpdateSourceTrigger=PropertyChanged, StringFormat=d}" />

                    <TextBlock Grid.Row="2" Grid.Column="0"
                               Text="Затрачено (час.): " />
                    <TextBlock Grid.Column="1" Grid.Row="2"
                               Margin="3,0,3,5"
                               Text="{Binding EditTodoModel.SpentTime}" />
                </Grid>
            </DataTemplate>

            
        </ResourceDictionary>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" MinWidth="240"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Grid Row="0" Column="0"
              ColumnSpan="2"
              Margin="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Grid.Resources>
                <Style TargetType="Border" BasedOn="{StaticResource BorderClassic}" >
                    <Setter Property="VerticalAlignment" Value="Stretch"/>
                </Style>

                <Style TargetType="TextBlock">
                    <Setter Property="Margin" Value="10"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                </Style>
            </Grid.Resources>

            <Image Source="/TaskList;component/ToolKit/todolist_logo.jpg" />

            <!--Текущий тип задач-->
            <Border Grid.Column="1"
                    BorderBrush="Aquamarine">
                <StackPanel VerticalAlignment="Center">
                    <TextBlock Text="Выбранный тип задач:" Margin="5" />
                    <TextBlock Text="{Binding CurrentPriorityType, UpdateSourceTrigger=PropertyChanged}"
                               Margin="5"
                               FontWeight="SemiBold"
                               FontSize="13"/>
                </StackPanel>
            </Border>

            <!--Временные данные мб какие-то-->
            <Border Grid.Column="2" 
                    BorderBrush="Aquamarine">
                <StackPanel Orientation="Vertical"
                            VerticalAlignment="Center"
                            Margin="15,0">

                    <StackPanel VerticalAlignment="Center" HorizontalAlignment="Left"
                                Orientation="Horizontal">
                        <TextBlock Text="Текущий проект: " Margin="0"/>
                        <StackPanel Orientation="Horizontal"
                                    HorizontalAlignment="Left"
                                    Margin="0">
                            <TextBlock Margin="3,0"
                                       FontWeight="SemiBold"
                                       FontSize="13"
                                       Text="{Binding CurrentProject.NameProject}"/>
                            <TextBlock Margin="0"
                                       FontStyle="Italic">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                        <Setter Property="Text" Value="(Agile)"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding CurrentProject.IsAgile}" Value="False">
                                                <Setter Property="Text" Value="(Scrum)"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </StackPanel>
                    </StackPanel>
                    <StackPanel VerticalAlignment="Center" 
                                Orientation="Horizontal">
                        <TextBlock Text="Общее число задач: " Margin="0"/>
                        <TextBlock Text="{Binding CountAllTodo}" 
                                   Margin="0"
                                   FontWeight="SemiBold"
                                   FontSize="13"/>
                    </StackPanel>
                </StackPanel>
            </Border>
        </Grid>

        <!--Боковая часть-->
        <Grid Grid.Row="1" Grid.Column="0"
              Margin="10">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid.Resources>
                <Style TargetType="Border" BasedOn="{StaticResource BorderClassic}" >
                    <Setter Property="VerticalAlignment" Value="Stretch"/>
                </Style>

                <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                    <Setter Property="MinHeight" Value="40"/>
                </Style>
            </Grid.Resources>

            <StackPanel Orientation="Vertical"
                        Grid.Row="0">
                <Button x:Name="ImportAndUrgentCommand" 
                        Content="Важные и срочные">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IdPriorityType, 
                                Converter={StaticResource IsEqualConverter},
                                ConverterParameter=1}" Value="True">
                                    <Setter Property="BorderThickness" Value="2"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <Button x:Name="ImportAndNonUrgentCommand"
                    Content="Важные и несрочные" >
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IdPriorityType, 
                                Converter={StaticResource IsEqualConverter},
                                ConverterParameter=2}" Value="True">
                                    <Setter Property="BorderThickness" Value="2"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <Button x:Name="UnImportAndUrgentCommand" 
                    Content="Неважные и срочные">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IdPriorityType, 
                                Converter={StaticResource IsEqualConverter},
                                ConverterParameter=3}" Value="True">
                                    <Setter Property="BorderThickness" Value="2"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <Button x:Name="UnImportAndNonUrgentCommand" 
                    Content="Неважные и несрочные" >
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IdPriorityType, 
                                Converter={StaticResource IsEqualConverter},
                                ConverterParameter=4}" Value="True">
                                    <Setter Property="BorderThickness" Value="2"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>

            <Button x:Name="BackToProjectsCommand"
                    Grid.Row="1"
                    Content="Вернуться к проектам"
                    VerticalAlignment="Bottom"/>
        </Grid>

        <!--Рабочая часть-->
        <Border Grid.Row="1" Grid.Column="1"
                BorderThickness="0"
                BorderBrush="Bisque">
            <Border.Style>
                <Style TargetType="Border" >
                    <Setter Property="Visibility" Value="Visible"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=NotSelectType, Path=IsVisible, 
                            UpdateSourceTrigger=PropertyChanged}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>

            <Grid>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="4.5*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition MinWidth="400"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Row="0"
                               Grid.Column="0"
                               Text="Список пуст"
                               FontSize="36"
                               FontFamily="Segoe UI Italic">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=WorkArea, Path=IsVisible, UpdateSourceTrigger=PropertyChanged}"
                                                 Value="True">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <StackPanel Grid.Row="0" Name="WorkArea"
                                Grid.Column="0">
                        <StackPanel.Style>
                            <Style TargetType="StackPanel">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=CardView, Path=Items.Count, UpdateSourceTrigger=PropertyChanged}" 
                                                 Value="0">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>

                        <TextBlock FontSize="12"
                                   HorizontalAlignment="Left"
                                   FontFamily="Segoe UI SemiBold"
                                   Margin="5" >
                            <TextBlock.Text>
                                <MultiBinding StringFormat="{}Задачи ({0} шт.): ">
                                    <Binding Path="TodoItems.Count"/>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>

                        <syncfusion:CardView x:Name="CardView" Margin="0"
                                             BorderThickness="0"
                                             ItemsSource="{Binding Path=TodoItems, UpdateSourceTrigger=PropertyChanged}"
                                             SelectedItem="{Binding Path=SelectedItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                             CanGroup="False"
                                             syncfusion:SkinStorage.VisualStyle="Metro"
                                             ShowHeader="False">

                            <syncfusion:CardView.HeaderTemplate>
                                <DataTemplate DataType="{x:Type models:TodoModel}">
                                    <TextBlock Text="{Binding Path=Caption}" Margin="5,0,0,0"/>
                                </DataTemplate>
                            </syncfusion:CardView.HeaderTemplate>

                            <syncfusion:CardView.ItemTemplate>
                                <DataTemplate DataType="{x:Type models:TodoModel}">
                                    <ListBox ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                                        <ListBoxItem>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="Описание:"/>
                                                <TextBlock Text="{Binding Path=Content}" Margin="5,0,0,0"/>
                                            </StackPanel>
                                        </ListBoxItem>

                                        <ListBoxItem>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="Исполнитель: "/>
                                                <TextBlock Text="{Binding Path=Owner.FullName}"
                                                       Margin="5,0,0,0"/>
                                            </StackPanel>
                                        </ListBoxItem>
                                        <ListBoxItem>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="Статус: "/>
                                                <TextBlock Text="{Binding Path=StateString}"
                                                       Margin="5,0,0,0"/>
                                            </StackPanel>
                                        </ListBoxItem>
                                    </ListBox>
                                </DataTemplate>
                            </syncfusion:CardView.ItemTemplate>
                        </syncfusion:CardView>
                    </StackPanel>

                    <Border Grid.Row="1"
                            Grid.Column="0"
                            Margin="5"
                            Visibility="{Binding }">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <Button x:Name="AddTodo" Content="Добавить"/>
                            <Button x:Name="EditTodo" Content="Редактировать" />
                            <Button x:Name="DeleteTodo" Content="Удалить" />
                        </StackPanel>
                    </Border>

                    <GridSplitter Grid.Column="1"
                                  Focusable="False"
                                  HorizontalAlignment="Stretch"
                                  VerticalAlignment="Stretch"
                                  Background="MediumAquamarine" 
                                  ShowsPreview="true"
                                  Width="5"
                                  Grid.Row="0"
                                  Grid.RowSpan="2"
                                  Visibility="{Binding EditTodoModel, Converter={StaticResource NullToVisibilityConverter}}"/>

                    <Border Grid.Row="0" Grid.RowSpan="2"
                            Grid.Column="2"
                            Margin="5,0"
                            Visibility="{Binding EditTodoModel, Converter={StaticResource NullToVisibilityConverter}}"
                            Background="Azure">
                        <Grid Margin="10">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <TextBlock Grid.Row="0"
                                       FontSize="18"
                                       FontFamily="Segoe UI SemiBold"
                                       TextTrimming="CharacterEllipsis">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat='{}Подробная информация задачи "{0}"'>
                                        <Binding Path="SelectedItem.Caption"/>
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>

                            <Grid Grid.Row="1" Grid.IsSharedSizeScope="True"
                                  Margin="0,15">
                                <Grid.Resources>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Setter Property="Margin" Value="0,0,0,5"/>
                                        <Setter Property="MinHeight" Value="32"/>
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                                    </Style>

                                    <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                        <Setter Property="Margin" Value="0,0,5,5"/>
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="HorizontalAlignment" Value="Left"/>
                                    </Style>
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="caption"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Grid.Row="0" Grid.Column="0"
                                           Text="Название: "/>
                                <TextBox Grid.Row="0" Grid.Column="1"
                                         Text="{Binding EditTodoModel.Caption, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                         IsEnabled="{Binding IsEditNow, UpdateSourceTrigger=PropertyChanged}"/>


                                <TextBlock Grid.Row="1" Grid.Column="0"
                                           Text="Описание: " />
                                <TextBox Grid.Row="1" Grid.Column="1"
                                         Text="{Binding EditTodoModel.Content, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                         IsEnabled="{Binding IsEditNow, UpdateSourceTrigger=PropertyChanged}"/>


                                <TextBlock Grid.Row="2" Grid.Column="0" 
                                           Text="Время выполнения (час.): " />
                                <TextBox Grid.Row="2" Grid.Column="1" 
                                         Text="{Binding EditTodoModel.EstimatedHours, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                         IsEnabled="{Binding IsEditNow, UpdateSourceTrigger=PropertyChanged}"/>


                                <ContentControl Grid.Row="3"
                                                Grid.Column="0" Grid.ColumnSpan="2"
                                                Margin="0,0,0,20"
                                                Content="{Binding}">
                                    <ContentControl.Style>
                                        <Style TargetType="ContentControl">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding EditTodoModel.State, UpdateSourceTrigger=PropertyChanged}" Value="-1">
                                                    <Setter Property="ContentTemplate" Value="{StaticResource StartExecute}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding EditTodoModel.State, UpdateSourceTrigger=PropertyChanged}" Value="0">
                                                    <Setter Property="ContentTemplate" Value="{StaticResource EndExecute}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding EditTodoModel.State, UpdateSourceTrigger=PropertyChanged}" Value="1">
                                                    <Setter Property="ContentTemplate" Value="{StaticResource DoneExecute}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ContentControl.Style>
                                </ContentControl>


                                <TextBlock Grid.Row="4" Grid.Column="0" 
                                           Text="Исполнитель: " />
                                <Grid Grid.Row="4" Grid.Column="1" >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock 
                                           Text="{Binding EditTodoModel.Owner.FullName, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                                    <Button x:Name="ChangeCurrentOwner"
                                            Grid.Column="1"
                                            IsEnabled="{Binding IsEditNow, UpdateSourceTrigger=PropertyChanged}"
                                            Content="Изменить"/>
                                </Grid>

                                <StackPanel Grid.Row="5"
                                            Grid.Column="0"
                                            Grid.ColumnSpan="2">
                                    <StackPanel.Style>
                                        <Style TargetType="StackPanel">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsEditNow, UpdateSourceTrigger=PropertyChanged}" 
                                                             Value="True">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </StackPanel.Style>

                                    <Border Grid.Column="0" Grid.ColumnSpan="2"
                                            BorderThickness="1.5"
                                            Margin="0,0,0,10"
                                            BorderBrush="Bisque"/>

                                    <Button x:Name="SaveTodo" Content="Сохранить" />
                                    <Button x:Name="CancelTodo" Content="Отмена"/>
                                </StackPanel>
                            </Grid>
                        </Grid>
                    </Border>
                </Grid>
            </Grid>
        </Border>

        <TextBlock Name="NotSelectType" 
                   Grid.Row="1" Grid.Column="1"
                   Text="Выберите тип задач из меню слева"
                   FontSize="36"
                   FontFamily="Segoe UI Italic">
            <TextBlock.Style>
                <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IdPriorityType}" Value="0">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
    </Grid>
</Window>
